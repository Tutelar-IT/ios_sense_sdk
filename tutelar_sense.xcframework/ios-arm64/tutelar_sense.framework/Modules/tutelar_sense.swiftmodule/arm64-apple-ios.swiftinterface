// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name tutelar_sense
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AdSupport
import AppTrackingTransparency
import CallKit
import SystemConfiguration.CaptiveNetwork
import CommonCrypto
import Contacts
import CoreBluetooth
import CoreGraphics
import CoreLocation
import CoreTelephony
import CryptoKit
import Darwin
import ExternalAccessory
import Foundation
import LocalAuthentication
import MachO
import MapKit
import MediaPlayer
import MessageUI
import Network
import NetworkExtension
import ObjectiveC
import Photos
import Security
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import tutelar_sense
public func screenSize() -> Swift.String?
@objc public protocol SenseDelegate {
  @objc func onFailure(message: Swift.String)
  @objc func onSuccess(data: Swift.String)
}
public class Sense {
  public init()
  public static func initSDK(senseConfig: tutelar_sense.SenseConfig?, withDelegate: (any tutelar_sense.SenseDelegate)?)
  public static func getSenseDetails(withDelegate: (any tutelar_sense.SenseDelegate)?)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DeviceDetail {
  public func getDeviceDetail() -> Swift.Dictionary<Swift.String, Any>
  public func getLocation() -> Swift.Dictionary<Swift.String, Any>
  public func getScreen() -> Swift.Dictionary<Swift.String, Any>
  public func getMedia() -> Swift.Dictionary<Swift.String, Any>
  public func getBattery() -> Swift.Dictionary<Swift.String, Any>
  public func getDetection(data: Any) -> Swift.Dictionary<Swift.String, Any>
  @objc deinit
}
public class SenseConfig {
  public var apiKey: Swift.String?
  public var senseInfo: Swift.Bool?
  public init()
  @objc deinit
}
